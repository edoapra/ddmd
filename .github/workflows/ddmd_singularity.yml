name: ddmd_apptainer

on:
  push:
    paths-ignore:
      - '*.sh'
      - '*.sbatch'
  pull_request:
  schedule:
    - cron: '0 0 * * SUN'
  repository_dispatch:
    types: [backend_automation]
  workflow_dispatch:
  workflow_call:

jobs:
  build_image:
    runs-on: ubuntu-20.04
    strategy:
        fail-fast: false
    steps:
    - name: pkg cleanup
      run: |
        sudo apt-get purge -y azure-cli || true
        sudo apt-get purge -y google-cloud-cli azure-cli microsoft-edge-stable dotnet-sdk-7.0 dotnet-sdk-6.0 google-chrome-stable firefox
        sudo apt-get purge -y temurin-17-jdk temurin-11-jdk hhvm temurin-8-jdk
        sudo apt-get -y clean
        sudo apt-get autoremove -y 
        dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n
        df -h
    - name: tag
      run: |
        if [[ ${{ github.ref_name }} == miniforge ]]; then
        echo "tag=oras://ghcr.io/${{ github.repository }}/ddmd" >> $GITHUB_ENV
        else
        echo "tag=oras://ghcr.io/${{ github.repository }}/ddmd_${{ github.ref_name }}" >> $GITHUB_ENV
        fi
    - name: echo-tag
      run: |
        echo ' the apptainer tag is ' "${{ env.tag }}"
    - name: Checkout source
      uses: actions/checkout@v3
      with:
        clean: false
    - name: Install apptainer
      env:
        APP_VER: 1.2.3
      run: |
        sudo apt-get install -y  libfuse2 libseccomp2 zlib1g uidmap squashfs-tools squashfuse fuse2fs fuse-overlayfs fakeroot
        wget -q  https://github.com/apptainer/apptainer/releases/download/v${APP_VER}/apptainer_${APP_VER}_amd64.deb 
        sudo dpkg -i apptainer_${APP_VER}_amd64.deb
        rm apptainer_${APP_VER}_amd64.deb
        sudo apt-get clean
        which apptainer
        apptainer version
        apptainer cache  clean -f
        dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n
        df -h
        ls -lart /mnt
        sudo touch /mnt/a.txt
        sudo chown $USER /mnt/a.txt
        ls -lrt /mnt
    - name: build an apptainer container
      run: |
        ls -l
        cd envs
        df -h . /tmp /mnt
        ls -lrt ~/
        sudo apptainer build /tmp/ddmd.sif  ddmd.def
        sudo chown  $USER /tmp/ddmd.sif
        ls -lrth /tmp/ddmd.sif
        file /tmp/ddmd.sif
    - name: Check compilation result
      run: |
        df -h
        pwd
        df -h /home/runner || true
        du -sk .apptainer  || true
        df -h .
        du -sk /tmp/* |sort -n || true
    - name: builddate
      id: build-date
      run: |
        echo "date=$(TZ=America/Los_Angeles date +%Y%m%d_%H%M%S)" >> $GITHUB_ENV
    - name: push to ghcr.io
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | apptainer remote login -u ${{ github.actor }} --password-stdin oras://ghcr.io
        cd envs
        pwd
        ls -l
        apptainer remote list
        apptainer push /tmp/ddmd.sif ${{ env.tag }}:${{ env.date }}
        apptainer push /tmp/ddmd.sif ${{ env.tag }}:latest
    - name: test image with apptainer
      run: |
        rm -f /tmp/ddmd.sif || true
        apptainer pull  -F /tmp/ddmd.sif ${{ env.tag }}:${{ env.date }}
        apptainer exec ${{ env.tag }}:${{ env.date }} ddmd run_ddmd  -h 
        apptainer exec ${{ env.tag }}:${{ env.date }} ls -lrt /opt/conda/bin |tail || true
        apptainer cache list -v
